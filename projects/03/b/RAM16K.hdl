// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load, sel[0]=address[12], sel[1]=address[13], sel[2]=false, a=l0, b=l1, c=l2, d=l3, e=l4, f=l5, g=l6, h=l7);

    RAM4K(in=in, out=out0, address=address[0..11], load=l0);
    RAM4K(in=in, out=out1, address=address[0..11], load=l1);
    RAM4K(in=in, out=out2, address=address[0..11], load=l2);
    RAM4K(in=in, out=out3, address=address[0..11], load=l3);
    RAM4K(in=in, out=out4, address=address[0..11], load=l4);
    RAM4K(in=in, out=out5, address=address[0..11], load=l5);
    RAM4K(in=in, out=out6, address=address[0..11], load=l6);
    RAM4K(in=in, out=out7, address=address[0..11], load=l7);

    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel[0]=address[12], sel[1]=address[13], sel[2]=false, out=out);

}
